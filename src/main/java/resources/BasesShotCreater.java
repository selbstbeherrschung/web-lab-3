package resources;

import java.io.PrintWriter;
import java.sql.*;

public class BasesShotCreater {

    private static org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(BasesShotCreater.class);


//    private static String user = "s283904";
//    private static String password = "ipe789";
//    private static String url = "jdbc:oracle:thin:@localhost:1521:orbis";

    private static String user = "s283904";
    private static String password = "ipe789";
    private static String url = "jdbc:oracle:thin:@localhost:1521:orcl";

    private static DataBaseManagerShots dataBaseManagerShots = null;

    private static String tableSessionCheck = "Select * from user_objects where Object_Name = 'SESSIONS3'";
    private static String tableShotsCheck = "Select * from user_objects where Object_Name = 'SHOTS3'";

    private static String tableSession =
            "CREATE TABLE sessions3(\n" +
                    "session_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,\n" +
                    "session_str_id VARCHAR2( 255 ) NOT NULL\n" +
                    ");";

    private static String tableShots =
                    "CREATE TABLE shots3 (\n" +
                    "shot_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,\n" +
                    "x BINARY_FLOAT NOT NULL,\n" +
                    "y BINARY_FLOAT NOT NULL,\n" +
                    "r BINARY_FLOAT NOT NULL,\n" +
                    "rg NUMBER NOT NULL,\n" +
                    "start_time VARCHAR2( 20 ) NOT NULL,\n" +
                    "script_time LONG NOT NULL,\n" +
                    "session_id NUMBER NOT NULL,\n" +
                    "FOREIGN KEY(session_id) REFERENCES sessions3(session_id)\n" +
                    ");";

    static {
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
        } catch (ClassNotFoundException e) {
            System.out.println("Unable to load class.");
            e.printStackTrace();
        }
    }

    public static DataBaseManagerShots getDataBase() {
        if (dataBaseManagerShots == null) {

            createDataBase();
            log.info("Database created");
        }
        return dataBaseManagerShots;
    }

    private static void createDataBase() {
        Connection connection;
        DriverManager.setLogWriter(new PrintWriter(System.out));
        try {
            connection = DriverManager.getConnection(url, user, password);
            log.info("Get dataBase connection: " + url + "\nUser: " + user);
            dataBaseManagerShots = new DataBaseManagerShots(connection);

            try(PreparedStatement st = connection.prepareStatement(tableSessionCheck)){
                ResultSet rs = st.executeQuery();
                if(rs.next()){
                    log.info("Session table already created");
                }else{
                    Statement statement = connection.createStatement();
                    statement.execute(tableSession);
                    log.info("Session table is creating now");
                }
            }catch (SQLException e){
                e.printStackTrace();
            }

            try(PreparedStatement st = connection.prepareStatement(tableShotsCheck)){
                ResultSet rs = st.executeQuery();
                if(rs.next()){
                    log.info("Shots table already created");
                }else{
                    Statement statement = connection.createStatement();
                    statement.execute(tableShots);
                    log.info("Shots table is creating now");
                }
            }catch (SQLException e){
                e.printStackTrace();
            }

        } catch (SQLException e) {
            log.info("Date base exception", e);
            e.printStackTrace();
        }
    }
}
